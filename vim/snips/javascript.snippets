snippet cl "console.log(...)" i
console.log($0)
endsnippet

snippet fun "function with dynamic docblock" w
`!p
# Currently Ultisnips does not support dynamic tabstops, so we cannot add
# tabstops to the datatype for these param tags until that feature is added.
def formatTag(argument):
	return " * @param {{}} {0}".format(argument)

arguments = t[2].split(',')
arguments = [argument.strip() for argument in arguments if argument]

if len(arguments):
	tags = map(formatTag, arguments)
	snip.rv = "/**"
	for tag in tags:
		snip += tag
	snip += ' */'
	snip += ''
else:
	snip.rv = ''
`function ${1}(${2}) {
	${0:${VISUAL}}
},
endsnippet

snippet re "require" w
const `!p
def formatVariableName(path):
	if path == 'react/addons':
		return 'React'

	lastPart = path.split('/')[-1]
	if lastPart == 'lodash':
		return '_'
	elif lastPart == 'jquery':
		return '$'
	elif lastPart == 'i18n':
		return 'I18n'
	else:
		return re.sub(r'[_\-]', '', lastPart.title())
snip.rv = formatVariableName(t[1])
` = require('${1}');$0
endsnippet

snippet me "module.exports" b
module.exports = ${1};
endsnippet

snippet ed "export default" b
export default ${1};
endsnippet

snippet sw "switch" b
switch (${1}) {
	${0:${VISUAL}}
}
endsnippet

snippet case "case" b
case ${1}:
	${0:${VISUAL}}
	break;
endsnippet

snippet ?
${1:condition} ? ${2:true} : ${3:false}
endsnippet

snippet if "if" b
if (${1}) {
	${0:${VISUAL}}
}
endsnippet

snippet el "else"
else {
	${0:${VISUAL}}
}
endsnippet

snippet eif "else if" !
else if (${1}) {
	${0:${VISUAL}}
}
endsnippet
