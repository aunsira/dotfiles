# Shortcut for changing directories
alias ...="cd ../.."                        # go up parent dir twice
alias ....="cd ../../.."                    # .. thrice
alias .....="cd ../../../.."                # .. four times
alias ......="cd ../../../../.."            # .. five times
alias cd-="cd -"
alias cd.='cd ..'
alias cd..="cd .."
alias cdcl='cd ClassroomApp'

# For speed me up
alias -g G='| grep'
alias -g L='| less'
alias -g M='| more'
alias FUCK='fuck'
alias amend="git commit --amend"
alias b="bundle exec"
alias c='clear'
alias cdh='cd ~'
alias deploy='rake deploy:archive'
alias e='exit'
alias fetch='git fetch'
alias fixup='git commit --fixup'
alias fuck='eval $(thefuck $(fc -ln -1))'
alias g='git status'
alias ga='git add -A'
alias gaf='git add $(gf)'
alias gbd='git branch -D $(gb)'
alias gc='git commit -m'
alias gcb='git checkout $(gb)'
alias gcf='git checkout $(gf)'
alias gch='git checkout $(gh)'
alias gco='git checkout'
alias gd='git diff'
alias gdc='git diff --cached'
alias gdf='git diff $(gf)'
alias gdh='git diff $(gh)'
alias gl='git lg'
alias glp='git lg -p'
alias gp='git push'
alias gpl='git pull'
alias gpo='git push origin'
alias gs='git status --short --branch'
alias gto='git-open'
alias gv='vim +GV +"autocmd BufWipeout <buffer> qall"'
alias ll="ls -FGlh"
alias ls="ls -AFG"
alias master='git checkout master'
alias migrate='rake db:migrate'
alias p8='ping 8.8.8.8'
alias reset='git reset --hard head'
alias rs='bundle check && rails s -p 3001'
alias tmux='tmux -2'
alias u='cd ..'
alias v="nvim"
alias vim='nvim'
alias vimn='nvim -u NONE'

fzf-gt-widget() LBUFFER+=$(gb | join-lines)
zle -N fzf-gt-widget
bindkey '^b^b' fzf-gt-widget

# GIT heart FZF
# --------------------------------------------
is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

gf() {
  is_in_git_repo || return
  git -c color.status=always status --short |
  fzf-tmux -m --ansi --nth 2..,.. \
    --preview 'NAME="$(cut -c4- <<< {})" &&
               (git diff --color=always "$NAME" | sed 1,4d; cat "$NAME") | head -'$LINES |
  cut -c4-
}

gb() {
  is_in_git_repo || return
  git branch -a --color=always | grep -v '/HEAD\s' | sort |
  fzf-tmux --ansi --multi --tac --preview-window right:70% \
    --preview 'git log --oneline --graph --date=short --pretty="format:%C(auto)%cd %h%d %s" $(sed s/^..// <<< {} | cut -d" " -f1) | head -'$LINES |
  sed 's/^..//' | cut -d' ' -f1 |
  sed 's#^remotes/##'
}

gt() {
  is_in_git_repo || return
  git tag --sort -version:refname |
  fzf-tmux --multi --preview-window right:70% \
    --preview 'git show --color=always {} | head -'$LINES
}

gh() {
  is_in_git_repo || return
  git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --graph |
  fzf-tmux --ansi --no-sort --reverse --multi --bind 'ctrl-s:toggle-sort' \
    --header 'Press CTRL-S to toggle sort' \
    --preview 'grep -o "[a-f0-9]\{7,\}" <<< {} | xargs git show --color=always | head -'$LINES |
  grep -o "[a-f0-9]\{7,\}"
}

gr() {
  is_in_git_repo || return
  git remote -v | awk '{print $1 " " $2}' | uniq |
  fzf-tmux --tac \
    --preview 'git log --oneline --graph --date=short --pretty="format:%C(auto)%cd %h%d %s" $(cut -d" " -f1 <<< {}) | head -'$LINES |
  cut -d' ' -f1
}

# A helper function to join multi-line output from fzf
join-lines() {
  local item
  while read item; do
    echo -n "${(q)item} "
  done
}
