#!/bin/bash

# Save a ton of history
HISTSIZE=20000
HISTFILE=~/.zsh_history
SAVEHIST=20000

setopt append_history
setopt extended_history
setopt hist_expire_dups_first
setopt hist_ignore_dups # ignore duplication command history list
setopt hist_ignore_space
setopt hist_verify
setopt inc_append_history
setopt share_history # share command history data

export EDITOR=nvim
export GOPATH=~/gosrc
if [[ `uname -m` == 'arm64' ]]; then
  export GOROOT=/opt/homebrew/opt/go/libexec
else
  export GOROOT=/usr/local/opt/go/libexec
fi
export ELIXIR_PATH=/usr/local/opt/elixir/bin
export CARGO_BIN_PATH=~/.cargo/bin
mkdir -p $GOPATH
export PATH=/usr/local/bin:/opt/homebrew/bin:$GOPATH/bin:$GOROOT/bin:$ELIXIR_PATH/bin:$CARGO_BIN_PATH:$PATH
export PATH="/opt/homebrew/opt/postgresql@9.6/bin:$PATH"
export PATH="/opt/homebrew/opt/postgresql@13/bin:$PATH"
export PATH="/usr/local/opt/openjdk/bin:$PATH"
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$(brew --prefix openssl@1.1)"
export PATH="/opt/homebrew/opt/openssl@1.1/bin:$PATH"
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
# Exclude `/`, `-` and `_` from WORDCHARS so we can remove a word without removing slash
export WORDCHARS='*?.[]~=&;!#$%^(){}<>'
export HELIX_RUNTIME=~/code/git/helix/runtime

# asdf
if [[ `uname -m` == 'arm64' ]]; then
  . /opt/homebrew/opt/asdf/libexec/asdf.sh
else
  . /usr/local/opt/asdf/libexec/asdf.sh
fi

export PATH=".git/safe/../../bin:$PATH"

export CDPATH=.:~:$HOME/code/git:$HOME/code:$HOME/Downloads

# Don't exit on ctrl-d
set -o ignoreeof

# FZF options
if type fd &> /dev/null; then
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
  export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'
  export FZF_CTRL_T_COMMAND='fd --type f --type d --hidden --follow --exclude .git'
fi

type bat &> /dev/null && export FZF_CTRL_T_OPTS="--preview 'bat -n --color=always {}'"
type blsd &> /dev/null && export FZF_ALT_C_COMMAND='blsd'
type tree &> /dev/null && export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"

# Enable Kiex, Elixir version manager
test -s "$HOME/.kiex/scripts/kiex" && source "$HOME/.kiex/scripts/kiex"

# Load Configurations
for f in ~/.config/deemoney/*; do source $f; done

# Temporary fix for clipboard provider in Helix
# https://github.com/helix-editor/helix/discussions/8470
unset TMUX

bindkey -e
