#!/bin/bash

fzf-gt-widget() {
  LBUFFER+=$(gb | join-lines)
}
zle -N fzf-gt-widget
bindkey '^b^b' fzf-gt-widget

gg() {
  search=""
  echo "Googling: $@"
  for term in $@; do
    search="$search%20$term"
  done
  open "http://www.google.com/search?q=$search"
}

# GIT heart FZF
# --------------------------------------------
is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

gf() {
  is_in_git_repo || return
  git -c color.status=always status --short |
  fzf-tmux -m --ansi --nth 2..,.. \
    --preview 'NAME="$(cut -c4- <<< {})" &&
               (git diff --color=always "$NAME" | sed 1,4d; cat "$NAME") | head -'$LINES |
  cut -c4-
}

gb() {
  is_in_git_repo || return
  git branch -a --color=always | grep -v '/HEAD\s' | sort |
  fzf-tmux --ansi --multi --tac --preview-window right:70% \
    --preview 'git log --oneline --graph --date=short --pretty="format:%C(auto)%cd %h%d %s" $(sed s/^..// <<< {} | cut -d" " -f1) | head -'$LINES |
  sed 's/^..//' | cut -d' ' -f1 |
  sed 's#^remotes/##'
}

gt() {
  is_in_git_repo || return
  git tag --sort -version:refname |
  fzf-tmux --multi --preview-window right:70% \
    --preview 'git show --color=always {} | head -'$LINES
}

gh() {
  is_in_git_repo || return
  git log --date=short --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --graph |
  fzf-tmux --ansi --no-sort --reverse --multi --bind 'ctrl-s:toggle-sort' \
    --header 'Press CTRL-S to toggle sort' \
    --preview 'grep -o "[a-f0-9]\{7,\}" <<< {} | xargs git show --color=always | head -'$LINES |
  grep -o "[a-f0-9]\{7,\}"
}

gr() {
  is_in_git_repo || return
  git remote -v | awk '{print $1 " " $2}' | uniq |
  fzf-tmux --tac \
    --preview 'git log --oneline --graph --date=short --pretty="format:%C(auto)%cd %h%d %s" $(cut -d" " -f1 <<< {}) | head -'$LINES |
  cut -d' ' -f1
}

log-commit() {
  local commits commit
  commits=$(git log --pretty=oneline --abbrev-commit --reverse) &&
  commit=$(echo "$commits" | fzf --tac +s +m -e)
  echo $commit
}

fup() {
  git commit --fixup $(echo "$(log-commit)" | sed "s/ .*//")
}

sqsh() {
  autosquash $(echo "$(log-commit)" | sed "s/ .*//")~1
}

# A helper function to join multi-line output from fzf
join-lines() {
  local item
  while read item; do
    echo -n "${(q)item} "
  done
}

function rrg {
  rails routes | grep $1
}

function git-new-remote-tracking {
  git checkout -b $1 && git push -u origin $1
}

function git-nuke {
  git branch -D $1 && git push origin :$1
}

function take {
  mkdir $1
  cd $1
}

function current-commit() {
  git rev-parse HEAD
}

function before-fixup-commit() {
  git rev-parse HEAD~2
}

function current-branch() {
  git rev-parse --abbrev-ref HEAD
}

j() { export JAVA_HOME=$(/usr/libexec/java_home); }

function exit() {
  if [[ -z $TMUX ]]; then
    builtin exit
    return
  fi

  panes=$(tmux list-panes | wc -l)
  wins=$(tmux list-windows | wc -l)
  count=$(($panes + $wins - 1))
  if [ $count -eq 1 ]; then
    tmux detach
  else
    builtin exit
  fi
}

function git-trust-bin() {
  mkdir -p .git/safe
}

function git_branch_name {
  val=`git branch 2>/dev/null | grep '^*' | colrm 1 2`
  echo "$val"
}

function git-on-master {
  branch=`git_branch_name`
  git checkout master && git pull --rebase
  git checkout $branch
  git rebase master && git push -f
}

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
